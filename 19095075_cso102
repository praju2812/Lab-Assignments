#include<stdio.h>
#include<string.h>
const int maxsize=100;
struct postfix
{
	int top;
	char arr[];

};
struct postfix opt; 
void push(int data)
{
if(opt.top<maxsize-1)	
opt.arr[++opt.top]=data;
}
int pop()
{
	if(opt.top!=-1)
	{
		printf("%c",opt.arr[opt.top]);
		opt.top--;
	}
}
void printstack()
{

	while(opt.top!=-1)
	{
	printf("%c",opt.arr[opt.top--]);
	
	}
	printf("\n");
}
int prior(char x)
{
    if(x == '(')
        return 0;
    if(x == '+' || x == '-')
        return 1;
    if(x == '*' || x == '/')
        return 2;
        if(x==')')
        return 3;
}
int main(void)
{
char x[1000];
	opt.top=-1;
	int n,i,j=1;
printf("enter number of expressions entered by sheldon");
scanf("%d",&n);	
while(j<n+1)
{
	printf("enter a infix expression ");
	scanf("%s",x);
for(i=0;x[i]!='\0';i++)
{
	if(x[i]<'9'&& x[i]>'1')
	printf("%c",x[i]);
	else 
	{
		if(prior(x[i])!=3)
		{
		if((prior(x[i]) >prior(opt.arr[opt.top]))||prior(x[i])==0)
		{
		push(x[i]);
	}
	else if(prior(x[i])<=prior(opt.arr[opt.top]))
	{
	pop();
	push(x[i]);	
	}
}
else 
{
while(prior(opt.arr[opt.top]!=0)||opt.top!=-1)
	{
		pop();
	}
	if(opt.top!=-1)
	opt.top--;
}
}
}
printstack();
j++;
}
return 0;
}
